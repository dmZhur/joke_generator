{"version":3,"sources":["components/NavigationButton/NavigationButton.tsx","components/MainWrapper/MainWrapper.tsx","store/features/jokeSlice.ts","store/index.ts","pages/favorite/Favorite.tsx","components/WarningModal/WarningModal.tsx","assets/images/chucknorris_logo.png","constants/messages.ts","pages/home/Home.tsx","config/routes.ts","application.tsx","index.tsx"],"names":["useStyles","makeStyles","root","display","margin","name","NavigationButton","_ref","pathTo","text","props","_objectWithoutProperties","_excluded","classes","_jsx","Link","to","className","children","Button","_objectSpread","maxWidth","alignItems","justifyContent","flexDirection","MainWrapper","Box","fetchJokes","createAsyncThunk","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","method","sent","json","abrupt","stop","addJoke","_callee2","_context2","JokeSlice","createSlice","initialState","jokes","favorites","reducers","addToFavorites","state","action","concat","_toConsumableArray","payload","joke","removeFromFavorites","newList","filter","id","extraReducers","builder","addCase","fulfilled","_action$payload$resul","shuffled","result","sort","Math","random","length","slice","_state$jokes","clone","splice","_JokeSlice$actions","actions","combineReducers","reducer","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","devTools","process","middleware","thunk","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","width","list","backgroundColor","borderTop","borderBottom","nav","float","withRouter","_jokes$favorites","dispatch","_jsxs","Typography","variant","List","map","item","index","ListItem","secondaryAction","IconButton","onClick","DeleteIcon","ListItemText","primary","value","WarningModal","open","onClose","contentText","buttonText","handleClose","Dialog","DialogContent","DialogActions","messages","controls","logo","height","routes","path","component","_jokes$jokes2","favoritesIds","_useState","useState","_useState2","_slicedToArray","checked","setChecked","_useState3","_useState4","setOpen","useEffect","interval","setInterval","clearInterval","_jokes$jokes","_Fragment","src","alt","FormControlLabel","control","Checkbox","onChange","label","includes","_jokes$favorites2","addToFavoritesHandler","StarIcon","StarBorderIcon","exact","FavoritePage","Application","BrowserRouter","Switch","route","Route","render","rootElement","document","getElementById","ReactDOM","StrictMode","Provider","PersistGate","loading"],"mappings":"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","file":"static/js/main.e983e83c.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport Button, { ButtonProps } from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@mui/styles';\n\nexport interface NavigationButtonProps extends ButtonProps {\n  pathTo: string;\n  text: string;\n}\n\nconst useStyles = makeStyles(\n  () => ({\n    root: {\n      display: 'inline-block',\n      margin: '10px 0px',\n    },\n  }),\n  { name: 'NavigationButton' }\n);\n\nexport const NavigationButton: FC<NavigationButtonProps> = ({\n  pathTo,\n  text,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Link to={pathTo} className={classes.root}>\n      <Button {...props}>{text}</Button>\n    </Link>\n  );\n};\n","import React, { FC, PropsWithChildren } from 'react';\nimport Box from '@mui/material/Box';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(\n  () => ({\n    root: {\n      maxWidth: 1024,\n      margin: '0 auto',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column',\n    },\n  }),\n  { name: 'MainWrapper' }\n);\n\nexport const MainWrapper: FC<PropsWithChildren> = ({ children }) => {\n  const classes = useStyles();\n\n  return <Box className={classes.root}>{children}</Box>;\n};\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport Joke from '../../interfaces/joke';\n\nexport interface JokeState {\n  jokes: Joke[];\n  favorites: Joke[];\n}\n\nconst initialState: JokeState = {\n  jokes: [],\n  favorites: [],\n};\n\nexport const fetchJokes = createAsyncThunk('jokes/fetch', async () => {\n  const response = await fetch(\n    'https://api.chucknorris.io/jokes/search?query=dev',\n    {\n      method: 'GET',\n    }\n  );\n  const data = response.json();\n  return data;\n});\n\nexport const addJoke = createAsyncThunk('joke/fetch', async () => {\n  const response = await fetch('https://api.chucknorris.io/jokes/random', {\n    method: 'GET',\n  });\n  const data = response.json();\n  return data;\n});\n\nexport const JokeSlice = createSlice({\n  name: 'jokes',\n  initialState,\n  reducers: {\n    addToFavorites: (state, action: PayloadAction<{ joke: Joke }>) => {\n      state.favorites = [...(state.favorites || []), action.payload.joke];\n    },\n    removeFromFavorites: (state, action: PayloadAction<{ joke: Joke }>) => {\n      const newList = state.favorites.filter(\n        (joke) => joke.id !== action.payload.joke.id\n      );\n\n      state.favorites = [...newList];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchJokes.fulfilled, (state, action) => {\n      // shuffle array\n      const shuffled = action.payload.result?.sort(() => 0.5 - Math.random());\n\n      // Get first 10 elements after shuffled\n      state.jokes = shuffled?.length ? shuffled.slice(0, 10) : [];\n    });\n    builder.addCase(addJoke.fulfilled, (state, action) => {\n      if (state.jokes && state.jokes?.length > 9) {\n        const clone = [...(state.jokes || [])];\n        clone?.splice(-1, 1);\n\n        state.jokes = [action.payload, ...clone];\n        return;\n      }\n      state.jokes = [action.payload, ...(state.jokes || [])];\n    });\n  },\n});\n\nexport default JokeSlice.reducer;\n\nexport const { addToFavorites, removeFromFavorites } = JokeSlice.actions;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { JokeSlice } from './features/jokeSlice';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk, { ThunkDispatch } from 'redux-thunk';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nconst reducers = combineReducers({\n  jokes: JokeSlice.reducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: [thunk],\n});\n\nexport const persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunkDispatch = ThunkDispatch<RootState, any, any>;\nexport const useAppDispatch = useDispatch<AppThunkDispatch>;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { FC } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { makeStyles } from '@mui/styles';\nimport { NavigationButton } from '../../components/NavigationButton';\nimport { MainWrapper } from '../../components/MainWrapper';\nimport { useAppSelector, useAppDispatch } from '../../store';\nimport { removeFromFavorites } from '../../store/features/jokeSlice';\nimport Joke from '../../interfaces/joke';\n\nconst useStyles = makeStyles(\n  () => ({\n    wrap: {\n      width: '100%',\n    },\n    list: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: '#ebebeb',\n        borderTop: '1px solid #767676',\n        borderBottom: '1px solid #767676',\n      },\n    },\n    nav: {\n      width: '100%',\n\n      '& a': {\n        float: 'right',\n      },\n    },\n  }),\n  { name: 'FavoritesJokeList' }\n);\n\nconst FavoritePage: FC = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  const jokes = useAppSelector((state) => state.jokes);\n\n  const removeHandler = (joke: Joke) => {\n    dispatch(removeFromFavorites({ joke: joke }));\n  };\n\n  return (\n    <MainWrapper>\n      <Typography variant=\"h3\">Favorites jokes list</Typography>\n      <Box className={classes.nav}>\n        <NavigationButton\n          pathTo=\"/\"\n          text=\"Go to the home page\"\n          variant=\"contained\"\n        />\n      </Box>\n      <List className={classes.wrap}>\n        {jokes.favorites?.map((item: Joke, index: number) => {\n          return (\n            <ListItem\n              className={classes.list}\n              key={`${item.id}${index}`}\n              secondaryAction={\n                <IconButton\n                  data-testid=\"icon-button\"\n                  onClick={() => removeHandler(item)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              }\n            >\n              <ListItemText primary={item.value} />\n            </ListItem>\n          );\n        })}\n      </List>\n    </MainWrapper>\n  );\n};\n\nexport default withRouter(FavoritePage);\n","import React, { FC } from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Typography from '@mui/material/Typography';\n\nexport interface WarningModalProps extends DialogProps {\n  open: boolean;\n  onClose: (value: boolean) => void;\n  contentText: string;\n  buttonText?: string;\n}\n\nexport const WarningModal: FC<WarningModalProps> = ({\n  open,\n  onClose,\n  contentText,\n  buttonText,\n  ...props\n}) => {\n  const handleClose = () => {\n    onClose(false);\n  };\n\n  return (\n    <Dialog {...props} onClose={handleClose} open={open}>\n      <DialogContent>\n        <Typography variant=\"h6\">{contentText}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} variant=\"outlined\">\n          {buttonText || 'Okey'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/chucknorris_logo.cabd9b85.png\";","export const messages = {\n  warning: `The limit on the number of items in the favorites list has been reached.\n    To add a new item, remove the element from the favorites list.`,\n};\n","import React, { useEffect, useState, FC } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport IconButton from '@mui/material/IconButton';\nimport StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport Checkbox from '@mui/material/Checkbox';\nimport Box from '@mui/material/Box';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { makeStyles } from '@mui/styles';\nimport { NavigationButton } from '../../components/NavigationButton';\nimport { MainWrapper } from '../../components/MainWrapper';\nimport { WarningModal } from '../../components/WarningModal';\nimport { useAppSelector, useAppDispatch } from '../../store';\nimport {\n  fetchJokes,\n  addJoke,\n  addToFavorites,\n  removeFromFavorites,\n} from '../../store/features/jokeSlice';\nimport Joke from '../../interfaces/joke';\nimport logo from '../../assets/images/chucknorris_logo.png';\nimport { messages } from '../../constants/messages';\n\nconst useStyles = makeStyles(\n  () => ({\n    list: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: '#ebebeb',\n        borderTop: '1px solid #767676',\n        borderBottom: '1px solid #767676',\n      },\n    },\n    controls: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '100%',\n    },\n    logo: {\n      height: '219px',\n    },\n  }),\n  { name: 'JokeList' }\n);\n\nconst HomePage: FC = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  const jokes = useAppSelector((state) => state.jokes);\n  const favoritesIds = jokes.favorites?.map((joke) => joke.id);\n  const [checked, setChecked] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const handleChange = () => {\n    setChecked(!checked);\n  };\n  const addToFavoritesHandler = (joke: Joke) => {\n    if (jokes.favorites?.length > 9) {\n      setOpen(true);\n      return;\n    }\n    dispatch(addToFavorites({ joke: joke }));\n  };\n  const removeHandler = (joke: Joke) => {\n    dispatch(removeFromFavorites({ joke: joke }));\n  };\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      dispatch(addJoke());\n    }, 5000);\n\n    if (!checked) {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [checked, dispatch]);\n\n  useEffect(() => {\n    if (!jokes.jokes?.length) {\n      dispatch(fetchJokes());\n    }\n  }, []);\n\n  return (\n    <>\n      <MainWrapper>\n        <Box className={classes.logo}>\n          <img src={logo} alt=\"Logo\" />\n        </Box>\n        <Box className={classes.controls}>\n          <FormControlLabel\n            control={<Checkbox checked={checked} onChange={handleChange} />}\n            label=\"Fetch a new joke every 5 seconds\"\n          />\n          <NavigationButton\n            pathTo=\"/favorites\"\n            text=\"Go to favorites\"\n            variant=\"contained\"\n          />\n        </Box>\n        <List>\n          {jokes.jokes?.map((item: Joke) => {\n            return (\n              <ListItem\n                className={classes.list}\n                key={item.id}\n                secondaryAction={\n                  <IconButton\n                    data-testid=\"icon-button\"\n                    onClick={() =>\n                      favoritesIds.includes(item.id)\n                        ? removeHandler(item)\n                        : addToFavoritesHandler(item)\n                    }\n                  >\n                    {favoritesIds.includes(item.id) ? (\n                      <StarIcon />\n                    ) : (\n                      <StarBorderIcon />\n                    )}\n                  </IconButton>\n                }\n              >\n                <ListItemText primary={item.value} />\n              </ListItem>\n            );\n          })}\n        </List>\n      </MainWrapper>\n      <WarningModal\n        open={open}\n        onClose={setOpen}\n        contentText={messages.warning}\n      />\n    </>\n  );\n};\n\nexport default withRouter(HomePage);\n","import IRoute from '../interfaces/route';\nimport FavoritePage from '../pages/favorite/Favorite';\nimport HomePage from '../pages/home/Home';\n\nconst routes: IRoute[] = [\n  {\n    path: '/',\n    name: 'Home Page',\n    component: HomePage,\n    exact: true,\n  },\n  {\n    path: '/favorites',\n    name: 'Favorite Page',\n    component: FavoritePage,\n    exact: true,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  RouteComponentProps,\n} from 'react-router-dom';\nimport routes from './config/routes';\n\nconst Application: React.FunctionComponent = () => (\n  <div>\n    <BrowserRouter>\n      <Switch>\n        {routes.map((route, index) => {\n          return (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              render={(props: RouteComponentProps<any>) => (\n                <route.component\n                  name={route.name}\n                  {...props}\n                  {...route.props}\n                />\n              )}\n            />\n          );\n        })}\n      </Switch>\n    </BrowserRouter>\n  </div>\n);\n\nexport default Application;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport Application from './application';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './store';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Application />\n      </PersistGate>\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}